# This workflow will prepare every thing required to proceed with a PR
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build and Test

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - develop-luca

jobs:
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # PREPARE
  prepare:
    env:
      ENTANDO_OPT_USE_PPL_TAG: ${{ secrets.ENTANDO_OPT_USE_PPL_TAG }}
      PPL_CONTEXT: ${{ toJson(github) }}
      GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
      GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
      REPO_FOLDER: "repo_folder"
      ENTANDO_OPT_LOG_LEVEL: TRACE
    runs-on: ubuntu-latest
    steps:
      - name: "PR PIPELINE START"
        run: |
          source <(curl -qsL "https://raw.githubusercontent.com/entando/entando-pipelines/${ENTANDO_OPT_USE_PPL_TAG}/macro/install.sh")
          ~/ppl-run \
            pr-status-report \
            .. @pr-labels remove "prepared" \
              --id "REMOVE-LABEL-PREPARED"
      - name: "Checkout"
        run: |
          ~/ppl-run checkout-branch pr \
            --id "CHECKOUT PR FOR PREPARATION" \
            --lcd "$REPO_FOLDER"
      # PR FORMAT CHECK
      - name: "PR format check"
        id: pr-format-check
        run: |
          ~/ppl-run check-pr-format \
            --lcd "$REPO_FOLDER"
      # BOM
      - name: "entando-core-bom check"
        id: pr-bom-check
        run: |
          ~/ppl-run @pr-labels add "prepared" \
            --id "ADD-LABEL-PREPARED"

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # SONAR
  sonar:
    needs: [ 'prepare' ]
    env:
      ENTANDO_OPT_USE_PPL_TAG: ${{ secrets.ENTANDO_OPT_USE_PPL_TAG }}
      PPL_CONTEXT: ${{ toJson(github) }}
      GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
      GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - name: "SONAR GATE CHECK"
        id: GATE
        run: |
          source <(curl -qsL "https://raw.githubusercontent.com/entando/entando-pipelines/${ENTANDO_OPT_USE_PPL_TAG}/macro/install.sh")
          ppl--gate-check SONAR
      - name: "Checkout"
        if: steps.GATE.outputs.ENABLED == 'true'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: "Set up JDK 11"
        if: steps.GATE.outputs.ENABLED == 'true'
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: "Cache Maven packages"
        if: steps.GATE.outputs.ENABLED == 'true'
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: "Cache SonarCloud packages"
        if: steps.GATE.outputs.ENABLED == 'true'
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: "Build and analyze"
        if: steps.GATE.outputs.ENABLED == 'true'
        run: |
          ~/ppl-run mvn SONAR
      - name: "Clean SKIP-SONAR"
        if: steps.GATE.outputs.ENABLED != 'true'
        run: |
          ~/ppl-run @pr-labels remove "skip-sonar" \
            --id "CLEAN-SKIP-SONAR"
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # BUILD AND TEST
  tests:
    needs: [ 'prepare' ]
    env:
      ENTANDO_OPT_USE_PPL_TAG: ${{ secrets.ENTANDO_OPT_USE_PPL_TAG }}
      PPL_CONTEXT: ${{ toJson(github) }}
      GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
      GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1 # ensure the sequential running of the spawned jobs
      matrix:
        # order matters: spawned jobs are execute as received in the array
        test-type: [ 'fast-test', 'slow-and-fast-test' ]
        include:
          # includes the value of the rebase variable depending on the test type of the matrix
          # includes the dependency between the 2 generated jobs to ensure sequential runs
          - test-type: 'fast-test'
            mvn-test-group: 'fast-test'
            remove-label: false
          - test-type: 'slow-and-fast-test'
            mvn-test-group: 'fast-test,slow-test'
            remove-label: true
    steps:
      - name: "TESTS GATE CHECK"
        id: GATE
        run: |
          source <(curl -qsL "https://raw.githubusercontent.com/entando/entando-pipelines/${ENTANDO_OPT_USE_PPL_TAG}/macro/install.sh")
          ppl--gate-check TESTS
      - name: "Checkout"
        if: steps.GATE.outputs.ENABLED == 'true'
        uses: actions/checkout@v2
      - name: "Cache Maven packages"
        if: steps.GATE.outputs.ENABLED == 'true'
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: "Set up JDK 11"
        if: steps.GATE.outputs.ENABLED == 'true'
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: "Build and run tests"
        if: steps.GATE.outputs.ENABLED == 'true'
        run: |
          ~/ppl-run mvn BUILD-AND-TEST "${{ matrix.mvn-test-group }}"
      - name: "Clean SKIP-TESTS"
        if: steps.GATE.outputs.ENABLED != 'true' && matrix.remove-label
        run: |
          ~/ppl-run @pr-labels remove "skip-tests" \
            --id "CLEAN-SKIP-TEST"
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # OWASP
  owasp:
    needs: [ 'prepare' ]
    env:
      ENTANDO_OPT_USE_PPL_TAG: ${{ secrets.ENTANDO_OPT_USE_PPL_TAG }}
      PPL_CONTEXT: ${{ toJson(github) }}
      GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
      GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
    runs-on: ubuntu-latest
    steps:
      - name: "OWASP GATE CHECK"
        id: GATE
        run: |
          source <(curl -qsL "https://raw.githubusercontent.com/entando/entando-pipelines/${ENTANDO_OPT_USE_PPL_TAG}/macro/install.sh")
          ppl--gate-check OWASP
      - name: "Checkout"
        if: steps.GATE.outputs.ENABLED == 'true'
        uses: actions/checkout@v2
      - name: "Cache Maven packages"
        if: steps.GATE.outputs.ENABLED == 'true'
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: "Set up JDK 11"
        if: steps.GATE.outputs.ENABLED == 'true'
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: "Build and run tests"
        if: steps.GATE.outputs.ENABLED == 'true'
        run: |
          ~/ppl-run mvn BUILD-AND-TEST "${{ matrix.mvn-test-group }}"
      - name: "Cache Maven packages"
        if: steps.GATE.outputs.ENABLED == 'true'
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: "OWASP checks"
        if: steps.GATE.outputs.ENABLED == 'true'
        run: |
          ~/ppl-run mvn OWASP
      - name: "Clean SKIP-OWASP"
        if: steps.GATE.outputs.ENABLED != 'true'
        run: |
          ~/ppl-run @pr-labels remove "skip-owasp" \
            --id "CLEAN-SKIP-OWASP"
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # PREVIEW TAG
  release-preview:
    needs: [ 'sonar', 'owasp', 'tests' ]
    env:
      ENTANDO_OPT_USE_PPL_TAG: ${{ secrets.ENTANDO_OPT_USE_PPL_TAG }}
      PPL_CONTEXT: ${{ toJson(github) }}
      GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
      GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
      REPO_FOLDER: "repo_folder"
      ENTANDO_OPT_LOG_LEVEL: TRACE
    runs-on: ubuntu-latest
    steps:
      - name: "CONFIGURE ENTANDO-PIPELINES"
        run: |
          source <(curl -qsL "https://raw.githubusercontent.com/entando/entando-pipelines/${ENTANDO_OPT_USE_PPL_TAG}/macro/install.sh")
      - name: "Checkout"
        run: |
          ~/ppl-run checkout-branch pr \
            --id "CHECKOUT FOR PREVIEW RELEASE" \
            --lcd "$REPO_FOLDER" \
            --token "${{ secrets.ENTANDO_BOT_TOKEN }}"
      - name: "Tag preview version"
        run: |
          ~/ppl-run release prepare-preview-release \
            --id "PREVIEW VERSION TAG GENERATION" \
            --lcd "$REPO_FOLDER"
